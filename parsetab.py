
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'scriptCASE DEFAULT END EXIT GOTO ID INTEGER NEWLINE REAL SCRIPT SPEAK STATE STR SWITCH TEXT TIMEOUT VAR VARIABLE\n        script : SCRIPT ID variables NEWLINE states\n        \n        variables : NEWLINE VARIABLE vars END\n        \n        vars : var\n                | vars var\n        \n        var : NEWLINE ID REAL VAR\n                | NEWLINE ID INTEGER VAR\n                | NEWLINE ID TEXT STR\n        \n        states : state\n                | states state\n        \n        state : NEWLINE STATE ID expressions END\n        \n        expressions : expression\n                    | expressions expression\n        \n        expression : NEWLINE switch\n                    | NEWLINE speak\n                    | NEWLINE goto\n                    | NEWLINE timeout\n                    | NEWLINE exit\n        \n        switch : SWITCH cases NEWLINE default\n        \n        cases : case\n                | cases case\n        \n        case : NEWLINE CASE STR expressions \n        \n        speak : SPEAK terms\n        \n        terms : term\n                | terms term\n        \n        term : STR\n                | VAR\n        \n        goto : GOTO ID\n        \n        timeout : TIMEOUT VAR expressions\n        \n        default : DEFAULT expressions\n        \n        exit : EXIT\n        '
    
_lr_action_items = {'SCRIPT':([0,],[2,]),'$end':([1,9,10,15,39,],[0,-1,-8,-9,-10,]),'ID':([2,11,14,36,],[3,16,19,48,]),'NEWLINE':([3,4,6,7,9,10,12,13,15,17,18,19,24,25,26,27,28,29,30,31,32,33,34,38,39,40,41,43,44,45,46,47,48,49,51,53,54,55,56,57,58,59,],[5,6,8,11,8,-8,11,-3,-9,-2,-4,23,23,-11,-5,-6,-7,-13,-14,-15,-16,-17,42,-30,-10,-12,50,-19,-22,-23,-25,-26,-27,23,-20,-24,23,-18,23,23,23,23,]),'VARIABLE':([5,],[7,]),'STATE':([8,],[14,]),'END':([12,13,18,24,25,26,27,28,29,30,31,32,33,38,40,44,45,46,47,48,53,54,55,58,],[17,-3,-4,39,-11,-5,-6,-7,-13,-14,-15,-16,-17,-30,-12,-22,-23,-25,-26,-27,-24,-28,-18,-29,]),'REAL':([16,],[20,]),'INTEGER':([16,],[21,]),'TEXT':([16,],[22,]),'VAR':([20,21,35,37,44,45,46,47,53,],[26,27,47,49,47,-23,-25,-26,-24,]),'STR':([22,35,44,45,46,47,52,53,],[28,46,46,-23,-25,-26,57,-24,]),'SWITCH':([23,],[34,]),'SPEAK':([23,],[35,]),'GOTO':([23,],[36,]),'TIMEOUT':([23,],[37,]),'EXIT':([23,],[38,]),'CASE':([42,50,],[52,52,]),'DEFAULT':([50,],[56,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'script':([0,],[1,]),'variables':([3,],[4,]),'states':([6,],[9,]),'state':([6,9,],[10,15,]),'vars':([7,],[12,]),'var':([7,12,],[13,18,]),'expressions':([19,49,56,57,],[24,54,58,59,]),'expression':([19,24,49,54,56,57,58,59,],[25,40,25,40,25,25,40,40,]),'switch':([23,],[29,]),'speak':([23,],[30,]),'goto':([23,],[31,]),'timeout':([23,],[32,]),'exit':([23,],[33,]),'cases':([34,],[41,]),'case':([34,41,],[43,51,]),'terms':([35,],[44,]),'term':([35,44,],[45,53,]),'default':([50,],[55,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> script","S'",1,None,None,None),
  ('script -> SCRIPT ID variables NEWLINE states','script',5,'p_script','parser.py',46),
  ('variables -> NEWLINE VARIABLE vars END','variables',4,'p_variables','parser.py',54),
  ('vars -> var','vars',1,'p_vars','parser.py',61),
  ('vars -> vars var','vars',2,'p_vars','parser.py',62),
  ('var -> NEWLINE ID REAL VAR','var',4,'p_var','parser.py',73),
  ('var -> NEWLINE ID INTEGER VAR','var',4,'p_var','parser.py',74),
  ('var -> NEWLINE ID TEXT STR','var',4,'p_var','parser.py',75),
  ('states -> state','states',1,'p_states','parser.py',81),
  ('states -> states state','states',2,'p_states','parser.py',82),
  ('state -> NEWLINE STATE ID expressions END','state',5,'p_state','parser.py',93),
  ('expressions -> expression','expressions',1,'p_expressions','parser.py',99),
  ('expressions -> expressions expression','expressions',2,'p_expressions','parser.py',100),
  ('expression -> NEWLINE switch','expression',2,'p_expression','parser.py',109),
  ('expression -> NEWLINE speak','expression',2,'p_expression','parser.py',110),
  ('expression -> NEWLINE goto','expression',2,'p_expression','parser.py',111),
  ('expression -> NEWLINE timeout','expression',2,'p_expression','parser.py',112),
  ('expression -> NEWLINE exit','expression',2,'p_expression','parser.py',113),
  ('switch -> SWITCH cases NEWLINE default','switch',4,'p_switch','parser.py',119),
  ('cases -> case','cases',1,'p_cases','parser.py',124),
  ('cases -> cases case','cases',2,'p_cases','parser.py',125),
  ('case -> NEWLINE CASE STR expressions','case',4,'p_case','parser.py',134),
  ('speak -> SPEAK terms','speak',2,'p_speak','parser.py',140),
  ('terms -> term','terms',1,'p_terms','parser.py',146),
  ('terms -> terms term','terms',2,'p_terms','parser.py',147),
  ('term -> STR','term',1,'p_term','parser.py',156),
  ('term -> VAR','term',1,'p_term','parser.py',157),
  ('goto -> GOTO ID','goto',2,'p_goto','parser.py',165),
  ('timeout -> TIMEOUT VAR expressions','timeout',3,'p_timeout','parser.py',171),
  ('default -> DEFAULT expressions','default',2,'p_default','parser.py',177),
  ('exit -> EXIT','exit',1,'p_exit','parser.py',183),
]
